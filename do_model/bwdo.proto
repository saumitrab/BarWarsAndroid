
package BarWars;

message ChallengeDO {

	required string cid = 1;
	optional string bar_code = 2;
	optional string description = 3;
}

message UserDO {

	required string uuid = 1;
	optional string display_name = 2;
	optional string profile_image_uri = 3;	

	optional uint32 points = 4;
	optional uint32 sovled_count = 5;
	optional uint32 submit_count = 6;
}

// Operations ENUM
	enum OperationType {
		
		GET_DESCRIPTION = 1;
		GET_PROFILE = 2;
		GET_CHALLENGES_LIST = 3;
		
		POST_PROFILE = 4;
		POST_SUBMIT_CHALLENGE = 5;
		POST_SOLVE_CHALLENGE = 6;
	}

// GET Requests
	message GetDescriptionRequest {
		
		required ChallengeDO	challenge = 1;
		optional UserDO			user = 2;
	}
	
	message GetDescriptionReponse {
		required ChallengeDO	challenge = 1;
	}
	
	message GetProfileRequest {
		required UserDO user = 1;
	}
	message GetProfileResponse {
		required UserDO user = 1;
	}
	
	message GetChallengesListRequest {
		
		required UserDO user = 1;
		optional string filter = 2;
	}
	
	message GetChallengesListResponse {
		
		repeated ChallengeDO challenge_list = 1;
	}
	
// POST Requests
	message CreateProfileDORequest {
		required UserDO user = 1;
	}

	message CreateProfileDOResponse {		
		required UserDO user = 1;
	}

	message SubmitChallengeDO {
		required ChallangeDO challenge = 1;
		optional UserDO		 user = 2;
	}
	
	message SubmitChallengeDO {
		required UserDO user = 1;
	}

	message SolveChallengeDO {
		required ChallangeDO challenge = 1;
		optional UserDO		 user = 2;
	}
	
	message SolveChallengeDO {
		required UserDO user = 1;
	}

// Message
	message MessagePayload {
	    optional bytes raw_payload = 2; 
	}

message Message {
    required uint32 version = 1 [default = 1];
    required uint32 id = 2 [default = 0];
    required OperationType type = 3 [default = 0];
    optional uint64 timestamp = 4 [default = 0];
    optional int32  status_code = 5;
    optional string status_message = 6;
    optional MessagePayload payload = 7; 
}
